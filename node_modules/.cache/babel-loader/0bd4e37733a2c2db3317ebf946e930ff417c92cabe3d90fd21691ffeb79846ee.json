{"ast":null,"code":"import \"../style/magic.css/dist/magic.css\";\nimport showErrorNotfication from \"./showErrorNotification\";\nfunction sendInfo(event) {\n  event.preventDefault(); // Предотвращаем стандартное поведение отправки формы\n\n  const form = document.getElementById(\"form\");\n  const formData = new FormData(form);\n\n  // Получаем значения из полей формы\n  const username = formData.get(\"username\");\n  const email = formData.get(\"email\");\n  const password = formData.get(\"password\");\n  var hasNumber = /\\d/;\n  if (username === \"\") {\n    showErrorNotfication(\"Please enter your username!\", \"username_error\");\n    return false;\n  } else if (username.length < 3) {\n    showErrorNotfication(\"Username must be at least 3 characters long!\", \"username_error\");\n    return false;\n  } else if (username.length > 20) {\n    showErrorNotfication(\"Username must be no more than 20 characters long!\", \"username_error\");\n    return false;\n  } else if (hasNumber.test(username)) {\n    showErrorNotfication(\"Username shouldn`t contain numbers!\", \"username_error\");\n    return false;\n  } else if (email === \"\") {\n    showErrorNotfication(\"Please enter your email!\", \"email_error\");\n    return false;\n  } else if (email.length < 5) {\n    showErrorNotfication(\"Email must be at least 5 characters long!\", \"email_error\");\n    return false;\n  } else if (email.length > 30) {\n    showErrorNotfication(\"Email must be no more than 50 characters long!\", \"email_error\");\n    return false;\n  } else if (password === \"\") {\n    showErrorNotfication(\"Please enter your password!\", \"password_error\");\n    return false;\n  } else if (password.length < 3) {\n    showErrorNotfication(\"Password must be at least 3 characters long!\", \"password_error\");\n    return false;\n  } else if (password.length > 20) {\n    showErrorNotfication(\"Password must be no more than 20 characters long!\", \"password_error\");\n    return false;\n  } else {\n    const array = [\"username_error\", \"email_error\", \"password_error\"];\n    for (let index = 0; index < array.length; index++) {\n      const error_check = document.querySelector(`.${array[index]}`);\n      if (error_check) {\n        document.body.removeChild(error_check);\n      }\n    }\n    const success_notification = document.createElement(\"div\");\n    const success_message = document.createTextNode(\"Account created successfully!\");\n\n    // Добавляем элемент на страницу\n    document.body.appendChild(success_notification);\n\n    // Добавляем класс \"error\" к элементу\n    success_notification.classList.add(\"success_notification\");\n\n    // После того, как элемент добавлен на страницу, добавляем классы анимации\n    success_notification.classList.add('magictime', 'tinUpIn');\n    success_notification.appendChild(success_message);\n  }\n\n  // Проверяем, что значения получены корректно\n  console.log(\"Username:\", username);\n  console.log(\"Email:\", email);\n  console.log(\"Password:\", password);\n\n  // Отправляем данные на сервер\n  fetch(\"http://localhost:5000/submit\", {\n    method: \"POST\",\n    body: JSON.stringify({\n      username,\n      email,\n      password\n    }),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  }).then(response => response.json()).then(data => {\n    console.log(`Response Data:`, data);\n    if (data.message === \"Username already exists\") {\n      // Имя пользователя уже существует\n      showErrorNotfication(\"Username already exists!\", \"username_error\");\n      return false;\n    } else if (data.message === \"Email already exists\") {\n      // Общая ошибка, которая не подпадает ни под одно из вышеуказанных условий\n      showErrorNotfication(\"Email already exists!\", \"email_error\");\n      // Вы можете также обработать ее соответственно\n    }\n  }).catch(error => {\n    console.error(\"Ошибка при отправке данных:\", error);\n  });\n  return true;\n}\nexport default sendInfo;","map":{"version":3,"names":["showErrorNotfication","sendInfo","event","preventDefault","form","document","getElementById","formData","FormData","username","get","email","password","hasNumber","length","test","array","index","error_check","querySelector","body","removeChild","success_notification","createElement","success_message","createTextNode","appendChild","classList","add","console","log","fetch","method","JSON","stringify","headers","then","response","json","data","message","catch","error"],"sources":["D:/WebChat/src/utils/registration.js"],"sourcesContent":["import \"../style/magic.css/dist/magic.css\";\r\nimport showErrorNotfication from \"./showErrorNotification\";\r\n\r\nfunction sendInfo(event) {\r\n    event.preventDefault(); // Предотвращаем стандартное поведение отправки формы\r\n\r\n    const form = document.getElementById(\"form\");\r\n    const formData = new FormData(form);\r\n\r\n    // Получаем значения из полей формы\r\n    const username = formData.get(\"username\");\r\n    const email = formData.get(\"email\");\r\n    const password = formData.get(\"password\");\r\n\r\n    var hasNumber = /\\d/;\r\n\r\n\r\n    if (username === \"\") {\r\n        showErrorNotfication(\"Please enter your username!\", \"username_error\");\r\n        return false;\r\n    }\r\n    else if (username.length < 3) {\r\n        showErrorNotfication(\"Username must be at least 3 characters long!\", \"username_error\");\r\n        return false;\r\n    }\r\n    else if (username.length > 20) {\r\n        showErrorNotfication(\"Username must be no more than 20 characters long!\", \"username_error\");\r\n        return false;\r\n    }\r\n    else if (hasNumber.test(username)) {\r\n        showErrorNotfication(\"Username shouldn`t contain numbers!\", \"username_error\");\r\n        return false;\r\n    }\r\n    else if (email === \"\") {\r\n        showErrorNotfication(\"Please enter your email!\", \"email_error\");\r\n        return false;\r\n    }\r\n    else if (email.length < 5) {\r\n        showErrorNotfication(\"Email must be at least 5 characters long!\", \"email_error\");\r\n        return false;\r\n    }\r\n    else if (email.length > 30) {\r\n        showErrorNotfication(\"Email must be no more than 50 characters long!\", \"email_error\");\r\n        return false;\r\n    }\r\n    else if (password === \"\") {\r\n        showErrorNotfication(\"Please enter your password!\", \"password_error\");\r\n        return false;\r\n    }\r\n    else if (password.length < 3) {\r\n        showErrorNotfication(\"Password must be at least 3 characters long!\", \"password_error\");\r\n        return false;\r\n    }\r\n    else if (password.length > 20) {\r\n        showErrorNotfication(\"Password must be no more than 20 characters long!\", \"password_error\");\r\n        return false;\r\n    }\r\n    else {\r\n        const array = [\"username_error\", \"email_error\", \"password_error\"];\r\n\r\n        for (let index = 0; index < array.length; index++) {\r\n            const error_check = document.querySelector(`.${array[index]}`);\r\n            if (error_check) {\r\n                document.body.removeChild(error_check);\r\n            }\r\n        }\r\n\r\n        const success_notification = document.createElement(\"div\");\r\n        const success_message = document.createTextNode(\"Account created successfully!\");\r\n\r\n        // Добавляем элемент на страницу\r\n        document.body.appendChild(success_notification);\r\n\r\n        // Добавляем класс \"error\" к элементу\r\n        success_notification.classList.add(\"success_notification\");\r\n\r\n        // После того, как элемент добавлен на страницу, добавляем классы анимации\r\n        success_notification.classList.add('magictime', 'tinUpIn');\r\n\r\n        success_notification.appendChild(success_message);\r\n    }\r\n\r\n    // Проверяем, что значения получены корректно\r\n    console.log(\"Username:\", username);\r\n    console.log(\"Email:\", email);\r\n    console.log(\"Password:\", password);\r\n\r\n    // Отправляем данные на сервер\r\n    fetch(\"http://localhost:5000/submit\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify({ username, email, password }),\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n    })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            console.log(`Response Data:`, data);\r\n            if (data.message === \"Username already exists\") {\r\n                // Имя пользователя уже существует\r\n                showErrorNotfication(\"Username already exists!\", \"username_error\");\r\n                return false;\r\n            } else if (data.message === \"Email already exists\") {\r\n                // Общая ошибка, которая не подпадает ни под одно из вышеуказанных условий\r\n                showErrorNotfication(\"Email already exists!\", \"email_error\");\r\n                // Вы можете также обработать ее соответственно\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error(\"Ошибка при отправке данных:\", error);\r\n        });\r\n    return true;\r\n}\r\n\r\nexport default sendInfo;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}