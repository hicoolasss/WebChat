{"ast":null,"code":"var _jsxFileName = \"D:\\\\WebChat\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\nimport '../style/registration.css';\nimport Registration from './pages/Registration';\nimport LogIn from './pages/Log_in';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [state, setState] = useState(null);\n  const callBackendAPI = async () => {\n    const response = await fetch('/express_backend');\n    const body = await response.json();\n    if (response.status !== 200) {\n      throw Error(body.message);\n    }\n    return body;\n  };\n\n  // получение GET маршрута с сервера Express, который соответствует GET из server.js \n  useEffect(() => {\n    callBackendAPI().then(res => setState(res.express)).catch(err => console.log(err));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Registration, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 34\n        }, this),\n        index: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"login\",\n        element: /*#__PURE__*/_jsxDEV(LogIn, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 38\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"registration\",\n        element: /*#__PURE__*/_jsxDEV(Registration, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 45\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"fkdfczwZ0ursGZj/fOecNSC7G+w=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Route","Routes","Registration","LogIn","jsxDEV","_jsxDEV","App","_s","state","setState","callBackendAPI","response","fetch","body","json","status","Error","message","then","res","express","catch","err","console","log","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","index","_c","$RefreshReg$"],"sources":["D:/WebChat/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { BrowserRouter, Route, Routes} from \"react-router-dom\";\r\nimport '../style/registration.css'\r\nimport Registration from './pages/Registration';\r\nimport LogIn from './pages/Log_in'\r\n\r\n\r\nfunction App() {\r\n\r\n  const [state, setState] = useState(null);\r\n\r\n  const callBackendAPI = async () => {\r\n    const response = await fetch('/express_backend');\r\n    const body = await response.json();\r\n\r\n    if (response.status !== 200) {\r\n      throw Error(body.message)\r\n    }\r\n    return body;\r\n  };\r\n  \r\n  // получение GET маршрута с сервера Express, который соответствует GET из server.js \r\n  useEffect(() => {\r\n    callBackendAPI()\r\n    .then(res => setState(res.express))\r\n    .catch(err => console.log(err));\r\n  }, []);\r\n\r\n  return (\r\n    <BrowserRouter >\r\n      <Routes>\r\n        <Route path=\"/\" element={<Registration />} index />\r\n        <Route path=\"login\" element={<LogIn />} />\r\n        <Route path=\"registration\" element={<Registration />} />\r\n      </Routes>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,aAAa,EAAEC,KAAK,EAAEC,MAAM,QAAO,kBAAkB;AAC9D,OAAO,2BAA2B;AAClC,OAAOC,YAAY,MAAM,sBAAsB;AAC/C,OAAOC,KAAK,MAAM,gBAAgB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGlC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMa,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kBAAkB,CAAC;IAChD,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAElC,IAAIH,QAAQ,CAACI,MAAM,KAAK,GAAG,EAAE;MAC3B,MAAMC,KAAK,CAACH,IAAI,CAACI,OAAO,CAAC;IAC3B;IACA,OAAOJ,IAAI;EACb,CAAC;;EAED;EACAf,SAAS,CAAC,MAAM;IACdY,cAAc,CAAC,CAAC,CACfQ,IAAI,CAACC,GAAG,IAAIV,QAAQ,CAACU,GAAG,CAACC,OAAO,CAAC,CAAC,CAClCC,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC;EACjC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEjB,OAAA,CAACN,aAAa;IAAA0B,QAAA,eACZpB,OAAA,CAACJ,MAAM;MAAAwB,QAAA,gBACLpB,OAAA,CAACL,KAAK;QAAC0B,IAAI,EAAC,GAAG;QAACC,OAAO,eAAEtB,OAAA,CAACH,YAAY;UAAA0B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAE;QAACC,KAAK;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACnD1B,OAAA,CAACL,KAAK;QAAC0B,IAAI,EAAC,OAAO;QAACC,OAAO,eAAEtB,OAAA,CAACF,KAAK;UAAAyB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC1C1B,OAAA,CAACL,KAAK;QAAC0B,IAAI,EAAC,cAAc;QAACC,OAAO,eAAEtB,OAAA,CAACH,YAAY;UAAA0B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAEpB;AAACxB,EAAA,CA9BQD,GAAG;AAAA2B,EAAA,GAAH3B,GAAG;AAgCZ,eAAeA,GAAG;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}