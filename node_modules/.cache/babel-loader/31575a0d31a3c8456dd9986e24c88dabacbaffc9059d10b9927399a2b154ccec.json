{"ast":null,"code":"import \"../style/magic.css/dist/magic.css\";\nfunction sendInfo(event) {\n  event.preventDefault(); // Предотвращаем стандартное поведение отправки формы\n\n  const form = document.getElementById(\"form\");\n  const formData = new FormData(form);\n\n  // Получаем значения из полей формы\n  const username = formData.get(\"username\");\n  const email = formData.get(\"email\");\n  const password = formData.get(\"password\");\n  const username_input = document.getElementById(\"username\");\n  const email_input = document.getElementById(\"email\");\n  const password_input = document.getElementById(\"password\");\n  const body = document.querySelector(\"body\");\n  function showError(errorMessage, errorClassName) {\n    const error_check = [\"username_error\", \"email_error\", \"password_error\"];\n    array.forEach(element => {\n      e;\n    });\n    if (error_check) {\n      document.body.removeChild(error_check);\n    }\n    const error_notification = document.createElement(\"div\");\n    const error_message = document.createTextNode(errorMessage);\n\n    // Добавляем элемент на страницу\n    document.body.appendChild(error_notification);\n\n    // Добавляем класс \"error\" к элементу\n    error_notification.classList.add(errorClassName);\n\n    // После того, как элемент добавлен на страницу, добавляем классы анимации\n    error_notification.classList.add('magictime', 'puffIn');\n    error_notification.appendChild(error_message);\n  }\n  if (username === \"\") {\n    showError(\"Please enter your username!\", \"username_error\");\n  } else if (email === \"\") {\n    showError(\"Please enter your email!\", \"email_error\");\n  } else if (password === \"\") {\n    showError(\"Please enter your password!\", \"password_error\");\n  }\n\n  // Проверяем, что значения получены корректно\n  console.log(\"Username:\", username);\n  console.log(\"Email:\", email);\n  console.log(\"Password:\", password);\n\n  // Отправляем данные на сервер\n  fetch(\"http://localhost:5000/submit\", {\n    method: \"POST\",\n    body: JSON.stringify({\n      username,\n      email,\n      password\n    }),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  }).then(response => response.json()).then(data => {\n    console.log(`Response Data:`, data);\n  }).catch(error => {\n    console.error(\"Ошибка при отправке данных:\", error);\n  });\n}\nexport default sendInfo;","map":{"version":3,"names":["sendInfo","event","preventDefault","form","document","getElementById","formData","FormData","username","get","email","password","username_input","email_input","password_input","body","querySelector","showError","errorMessage","errorClassName","error_check","array","forEach","element","e","removeChild","error_notification","createElement","error_message","createTextNode","appendChild","classList","add","console","log","fetch","method","JSON","stringify","headers","then","response","json","data","catch","error"],"sources":["D:/WebChat/src/utils/registration.js"],"sourcesContent":["import \"../style/magic.css/dist/magic.css\";\r\n\r\nfunction sendInfo(event) {\r\n    event.preventDefault(); // Предотвращаем стандартное поведение отправки формы\r\n\r\n    const form = document.getElementById(\"form\");\r\n    const formData = new FormData(form);\r\n\r\n    // Получаем значения из полей формы\r\n    const username = formData.get(\"username\");\r\n    const email = formData.get(\"email\");\r\n    const password = formData.get(\"password\");\r\n\r\n    const username_input = document.getElementById(\"username\");\r\n    const email_input = document.getElementById(\"email\");\r\n    const password_input = document.getElementById(\"password\");\r\n\r\n    const body = document.querySelector(\"body\");\r\n\r\n    function showError(errorMessage, errorClassName) {\r\n        const error_check = [\"username_error\", \"email_error\", \"password_error\"];\r\n\r\n        array.forEach(element => {\r\n            e\r\n        });\r\n        if (error_check) {\r\n            document.body.removeChild(error_check);\r\n        }\r\n\r\n        const error_notification = document.createElement(\"div\");\r\n        const error_message = document.createTextNode(errorMessage);\r\n\r\n        // Добавляем элемент на страницу\r\n        document.body.appendChild(error_notification);\r\n\r\n        // Добавляем класс \"error\" к элементу\r\n        error_notification.classList.add(errorClassName);\r\n\r\n        // После того, как элемент добавлен на страницу, добавляем классы анимации\r\n        error_notification.classList.add('magictime', 'puffIn');\r\n\r\n        error_notification.appendChild(error_message);\r\n    }\r\n\r\n    if (username === \"\") {\r\n        showError(\"Please enter your username!\", \"username_error\");\r\n    }\r\n\r\n    else if (email === \"\") {\r\n        showError(\"Please enter your email!\", \"email_error\");\r\n    }\r\n\r\n    else if (password === \"\") {\r\n        showError(\"Please enter your password!\", \"password_error\");\r\n    }\r\n\r\n\r\n\r\n    // Проверяем, что значения получены корректно\r\n    console.log(\"Username:\", username);\r\n    console.log(\"Email:\", email);\r\n    console.log(\"Password:\", password);\r\n\r\n    // Отправляем данные на сервер\r\n    fetch(\"http://localhost:5000/submit\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify({ username, email, password }),\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n    })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            console.log(`Response Data:`, data);\r\n        })\r\n        .catch(error => {\r\n            console.error(\"Ошибка при отправке данных:\", error);\r\n        });\r\n}\r\n\r\n\r\n\r\nexport default sendInfo;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}