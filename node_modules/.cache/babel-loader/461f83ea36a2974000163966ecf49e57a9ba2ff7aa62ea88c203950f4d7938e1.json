{"ast":null,"code":"const mongoose = require(\"./database\"); // Импортируем mongoose из файла database.js\nconst UserModel = require('../db_stuff/User'); // Подключаем модель пользователя\n\nasync function checkLoginData(event) {\n  event.preventDefault();\n  const form = document.getElementById(\"log_in_form\");\n  const formData = new FormData(form);\n  const username_or_email = formData.get(\"username\");\n  const password = formData.get(\"password\");\n  try {\n    const user = await UserModel.findOne({\n      $or: [{\n        username: username_or_email\n      }, {\n        email: username_or_email\n      }]\n    });\n    if (user) {\n      console.log('Пользователь найден:', user);\n      // Пользователь найден, выполняйте нужные действия\n    } else {\n      console.log('Пользователь не найден');\n      // Пользователь не найден, выполняйте нужные действия\n    }\n  } catch (error) {\n    console.error('Ошибка при поиске пользователя:', error);\n    // Обработка ошибки\n  }\n}\n\nexport default checkLoginData;","map":{"version":3,"names":["mongoose","require","UserModel","checkLoginData","event","preventDefault","form","document","getElementById","formData","FormData","username_or_email","get","password","user","findOne","$or","username","email","console","log","error"],"sources":["D:/WebChat/src/utils/checkLoginData.js"],"sourcesContent":["const mongoose = require(\"./database\"); // Импортируем mongoose из файла database.js\r\nconst UserModel = require('../db_stuff/User'); // Подключаем модель пользователя\r\n\r\nasync function checkLoginData(event) {\r\n    event.preventDefault();\r\n\r\n    const form = document.getElementById(\"log_in_form\");\r\n    const formData = new FormData(form);\r\n\r\n    const username_or_email = formData.get(\"username\");\r\n    const password = formData.get(\"password\");\r\n\r\n    try {\r\n        const user = await UserModel.findOne({ $or: [{ username: username_or_email }, { email: username_or_email }] });\r\n\r\n        if (user) {\r\n            console.log('Пользователь найден:', user);\r\n            // Пользователь найден, выполняйте нужные действия\r\n        } else {\r\n            console.log('Пользователь не найден');\r\n            // Пользователь не найден, выполняйте нужные действия\r\n        }\r\n    } catch (error) {\r\n        console.error('Ошибка при поиске пользователя:', error);\r\n        // Обработка ошибки\r\n    }\r\n}\r\n\r\nexport default checkLoginData;"],"mappings":"AAAA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC;AACxC,MAAMC,SAAS,GAAGD,OAAO,CAAC,kBAAkB,CAAC,CAAC,CAAC;;AAE/C,eAAeE,cAAcA,CAACC,KAAK,EAAE;EACjCA,KAAK,CAACC,cAAc,CAAC,CAAC;EAEtB,MAAMC,IAAI,GAAGC,QAAQ,CAACC,cAAc,CAAC,aAAa,CAAC;EACnD,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAACJ,IAAI,CAAC;EAEnC,MAAMK,iBAAiB,GAAGF,QAAQ,CAACG,GAAG,CAAC,UAAU,CAAC;EAClD,MAAMC,QAAQ,GAAGJ,QAAQ,CAACG,GAAG,CAAC,UAAU,CAAC;EAEzC,IAAI;IACA,MAAME,IAAI,GAAG,MAAMZ,SAAS,CAACa,OAAO,CAAC;MAAEC,GAAG,EAAE,CAAC;QAAEC,QAAQ,EAAEN;MAAkB,CAAC,EAAE;QAAEO,KAAK,EAAEP;MAAkB,CAAC;IAAE,CAAC,CAAC;IAE9G,IAAIG,IAAI,EAAE;MACNK,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEN,IAAI,CAAC;MACzC;IACJ,CAAC,MAAM;MACHK,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;MACrC;IACJ;EACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZF,OAAO,CAACE,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;IACvD;EACJ;AACJ;;AAEA,eAAelB,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}