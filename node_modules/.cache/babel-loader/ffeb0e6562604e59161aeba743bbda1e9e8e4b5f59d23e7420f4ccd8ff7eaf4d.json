{"ast":null,"code":"import \"../style/magic.css/dist/magic.css\";\nfunction sendInfo(event) {\n  event.preventDefault(); // Предотвращаем стандартное поведение отправки формы\n\n  const form = document.getElementById(\"form\");\n  const formData = new FormData(form);\n\n  // Получаем значения из полей формы\n  const username = formData.get(\"username\");\n  const email = formData.get(\"email\");\n  const password = formData.get(\"password\");\n  const username_input = document.getElementById(\"username\");\n  const email_input = document.getElementById(\"email\");\n  const password_input = document.getElementById(\"password\");\n  const body = document.querySelector(\"body\");\n  if (username === \"\") {\n    const username_check = document.querySelector(\".username_error\");\n    const email_check = document.querySelector(\".email_error\");\n    const password_check = document.querySelector(\".password_error\");\n\n    // Проверяем существование элементов перед удалением\n    if (email_check) {\n      body.removeChild(email_check);\n    }\n    if (password_check) {\n      body.removeChild(password_check);\n    }\n\n    // Остальной код остается без изменений\n    if (!username_check) {\n      const error_notification = document.createElement(\"div\");\n      const error_message = document.createTextNode(\"Please enter your username!\");\n\n      // Добавляем элемент на страницу\n      document.body.appendChild(error_notification);\n\n      // Добавляем класс \"error\" к элементу\n      error_notification.classList.add(\"username_error\");\n\n      // После того, как элемент добавлен на страницу, добавляем классы анимации\n      error_notification.classList.add('magictime', 'puffIn');\n      error_notification.appendChild(error_message);\n      return;\n    } else {\n      // Если элемент с классом \"error\" уже существует, удаляем классы анимации и добавляем их снова\n      const error_notification = username_check;\n      error_notification.classList.remove('magictime', 'puffIn');\n      void error_notification.offsetWidth; // Это запускает перерисовку элемента\n      error_notification.classList.add('magictime', 'puffIn');\n    }\n  }\n  if (email === \"\") {\n    const username_check = document.querySelector(\".username_error\");\n    const email_check = document.querySelector(\".email_error\");\n    const password_check = document.querySelector(\".password_error\");\n    body.removeChild(username_check);\n    body.removeChild(password_check);\n\n    // Проверяем существование элементов перед удалением\n    if (username_check) {\n      body.removeChild(username_check);\n    }\n    if (password_check) {\n      body.removeChild(password_check);\n    }\n    if (!email_check) {\n      const error_notification = document.createElement(\"div\");\n      const error_message = document.createTextNode(\"Please enter your email!\");\n\n      // Добавляем элемент на страницу\n      document.body.appendChild(error_notification);\n\n      // Добавляем класс \"error\" к элементу\n      error_notification.classList.add(\"email_error\");\n\n      // После того, как элемент добавлен на страницу, добавляем классы анимации\n      error_notification.classList.add('magictime', 'puffIn');\n      error_notification.appendChild(error_message);\n      return;\n    } else {\n      // Если элемент с классом \"error\" уже существует, удаляем классы анимации и добавляем их снова\n      const error_notification = email_check;\n      error_notification.classList.remove('magictime', 'puffIn');\n      void error_notification.offsetWidth; // Это запускает перерисовку элемента\n      error_notification.classList.add('magictime', 'puffIn');\n    }\n  }\n  if (password === \"\") {\n    const username_check = document.querySelector(\".username_error\");\n    const email_check = document.querySelector(\".email_error\");\n    const password_check = document.querySelector(\".password_error\");\n    body.removeChild(username_check);\n    body.removeChild(email_check);\n    if (username_check) {\n      body.removeChild(username_check);\n    }\n    if (password_check) {\n      body.removeChild(password_check);\n    }\n    if (!password_check) {\n      const error_notification = document.createElement(\"div\");\n      const error_message = document.createTextNode(\"Please enter your password!\");\n\n      // Добавляем элемент на страницу\n      document.body.appendChild(error_notification);\n\n      // Добавляем класс \"error\" к элементу\n      error_notification.classList.add(\"password_error\");\n\n      // После того, как элемент добавлен на страницу, добавляем классы анимации\n      error_notification.classList.add('magictime', 'puffIn');\n      error_notification.appendChild(error_message);\n      return;\n    } else {\n      // Если элемент с классом \"error\" уже существует, удаляем классы анимации и добавляем их снова\n      const error_notification = password_check;\n      error_notification.classList.remove('magictime', 'puffIn');\n      void error_notification.offsetWidth; // Это запускает перерисовку элемента\n      error_notification.classList.add('magictime', 'puffIn');\n    }\n  }\n\n  // Проверяем, что значения получены корректно\n  console.log(\"Username:\", username);\n  console.log(\"Email:\", email);\n  console.log(\"Password:\", password);\n\n  // Отправляем данные на сервер\n  fetch(\"http://localhost:5000/submit\", {\n    method: \"POST\",\n    body: JSON.stringify({\n      username,\n      email,\n      password\n    }),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  }).then(response => response.json()).then(data => {\n    console.log(`Response Data:`, data);\n  }).catch(error => {\n    console.error(\"Ошибка при отправке данных:\", error);\n  });\n}\nexport default sendInfo;","map":{"version":3,"names":["sendInfo","event","preventDefault","form","document","getElementById","formData","FormData","username","get","email","password","username_input","email_input","password_input","body","querySelector","username_check","email_check","password_check","removeChild","error_notification","createElement","error_message","createTextNode","appendChild","classList","add","remove","offsetWidth","console","log","fetch","method","JSON","stringify","headers","then","response","json","data","catch","error"],"sources":["D:/WebChat/src/utils/registration.js"],"sourcesContent":["import \"../style/magic.css/dist/magic.css\";\r\n\r\nfunction sendInfo(event) {\r\n    event.preventDefault(); // Предотвращаем стандартное поведение отправки формы\r\n\r\n    const form = document.getElementById(\"form\");\r\n    const formData = new FormData(form);\r\n\r\n    // Получаем значения из полей формы\r\n    const username = formData.get(\"username\");\r\n    const email = formData.get(\"email\");\r\n    const password = formData.get(\"password\");\r\n\r\n    const username_input = document.getElementById(\"username\");\r\n    const email_input = document.getElementById(\"email\");\r\n    const password_input = document.getElementById(\"password\");\r\n\r\n    const body = document.querySelector(\"body\");\r\n\r\n    if (username === \"\") {\r\n        const username_check = document.querySelector(\".username_error\");\r\n        const email_check = document.querySelector(\".email_error\");\r\n        const password_check = document.querySelector(\".password_error\");\r\n        \r\n        // Проверяем существование элементов перед удалением\r\n        if (email_check) {\r\n            body.removeChild(email_check);\r\n        }\r\n        if (password_check) {\r\n            body.removeChild(password_check);\r\n        }\r\n    \r\n        // Остальной код остается без изменений\r\n        if (!username_check) {\r\n            const error_notification = document.createElement(\"div\");\r\n            const error_message = document.createTextNode(\"Please enter your username!\");\r\n    \r\n            // Добавляем элемент на страницу\r\n            document.body.appendChild(error_notification);\r\n    \r\n            // Добавляем класс \"error\" к элементу\r\n            error_notification.classList.add(\"username_error\");\r\n    \r\n            // После того, как элемент добавлен на страницу, добавляем классы анимации\r\n            error_notification.classList.add('magictime', 'puffIn');\r\n    \r\n            error_notification.appendChild(error_message);\r\n    \r\n            return;\r\n        } else {\r\n            // Если элемент с классом \"error\" уже существует, удаляем классы анимации и добавляем их снова\r\n            const error_notification = username_check;\r\n            error_notification.classList.remove('magictime', 'puffIn');\r\n            void error_notification.offsetWidth; // Это запускает перерисовку элемента\r\n            error_notification.classList.add('magictime', 'puffIn');\r\n        }\r\n    }\r\n    \r\n\r\n\r\n    if (email === \"\") {\r\n        const username_check = document.querySelector(\".username_error\");\r\n        const email_check = document.querySelector(\".email_error\");\r\n        const password_check = document.querySelector(\".password_error\");\r\n        body.removeChild(username_check);\r\n        body.removeChild(password_check);\r\n\r\n         // Проверяем существование элементов перед удалением\r\n        if (username_check) {\r\n            body.removeChild(username_check);\r\n        }\r\n        if (password_check) {\r\n            body.removeChild(password_check);\r\n        }\r\n        if (!email_check) {\r\n            const error_notification = document.createElement(\"div\");\r\n            const error_message = document.createTextNode(\"Please enter your email!\");\r\n    \r\n            // Добавляем элемент на страницу\r\n            document.body.appendChild(error_notification);\r\n    \r\n            // Добавляем класс \"error\" к элементу\r\n            error_notification.classList.add(\"email_error\");\r\n    \r\n            // После того, как элемент добавлен на страницу, добавляем классы анимации\r\n            error_notification.classList.add('magictime', 'puffIn');\r\n    \r\n            error_notification.appendChild(error_message);\r\n    \r\n            return;\r\n        } else {\r\n            // Если элемент с классом \"error\" уже существует, удаляем классы анимации и добавляем их снова\r\n            const error_notification = email_check;\r\n            error_notification.classList.remove('magictime', 'puffIn');\r\n            void error_notification.offsetWidth; // Это запускает перерисовку элемента\r\n            error_notification.classList.add('magictime', 'puffIn');\r\n        }\r\n    }\r\n\r\n    if (password === \"\") {\r\n        const username_check = document.querySelector(\".username_error\");\r\n        const email_check = document.querySelector(\".email_error\");\r\n        const password_check = document.querySelector(\".password_error\");\r\n        body.removeChild(username_check);\r\n        body.removeChild(email_check);\r\n\r\n        if (username_check) {\r\n            body.removeChild(username_check);\r\n        }\r\n        if (password_check) {\r\n            body.removeChild(password_check);\r\n        }\r\n        if (!password_check) {\r\n            const error_notification = document.createElement(\"div\");\r\n            const error_message = document.createTextNode(\"Please enter your password!\");\r\n    \r\n            // Добавляем элемент на страницу\r\n            document.body.appendChild(error_notification);\r\n    \r\n            // Добавляем класс \"error\" к элементу\r\n            error_notification.classList.add(\"password_error\");\r\n    \r\n            // После того, как элемент добавлен на страницу, добавляем классы анимации\r\n            error_notification.classList.add('magictime', 'puffIn');\r\n    \r\n            error_notification.appendChild(error_message);\r\n    \r\n            return;\r\n        } else {\r\n            // Если элемент с классом \"error\" уже существует, удаляем классы анимации и добавляем их снова\r\n            const error_notification = password_check;\r\n            error_notification.classList.remove('magictime', 'puffIn');\r\n            void error_notification.offsetWidth; // Это запускает перерисовку элемента\r\n            error_notification.classList.add('magictime', 'puffIn');\r\n        }\r\n    }\r\n\r\n\r\n    // Проверяем, что значения получены корректно\r\n    console.log(\"Username:\", username);\r\n    console.log(\"Email:\", email);\r\n    console.log(\"Password:\", password);\r\n\r\n    // Отправляем данные на сервер\r\n    fetch(\"http://localhost:5000/submit\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify({ username, email, password }),\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n    })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            console.log(`Response Data:`, data);\r\n        })\r\n        .catch(error => {\r\n            console.error(\"Ошибка при отправке данных:\", error);\r\n        });\r\n}\r\n\r\n\r\n\r\nexport default sendInfo;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}